{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programmieren_YT\\\\Expense_Tracker\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Abrufen der Einkommen\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`);\n      setIncomes(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Hinzufügen eines Einkommens\n  const addIncome = async income => {\n    try {\n      await axios.post(`${BASE_URL}add-income`, income);\n      getIncomes();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Löschen eines Einkommens\n  const deleteIncome = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-income/${id}`);\n      getIncomes();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Gesamteinkommen berechnen\n  const totalIncome = () => {\n    return incomes.reduce((acc, income) => acc + income.amount, 0);\n  };\n\n  // Wiederholen eines Einkommens\n  const repeatIncome = async id => {\n    try {\n      const incomeToRepeat = incomes.find(income => income._id === id);\n      if (!incomeToRepeat) {\n        setError(\"Einkommen nicht gefunden\");\n        return;\n      }\n      const newIncome = {\n        ...incomeToRepeat,\n        _id: String(Date.now()),\n        // Neue ID generieren\n        date: new Date() // Optional: aktuelles Datum setzen\n      };\n      await axios.post(`${BASE_URL}add-income`, newIncome);\n      getIncomes();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Wiederholen eines Ausgaben\n  const repeatExpense = async id => {\n    try {\n      const expenseToRepeat = expenses.find(income => income._id === id);\n      if (!expenseToRepeat) {\n        setError(\"Einkommen nicht gefunden\");\n        return;\n      }\n      const newExpense = {\n        ...expenseToRepeat,\n        _id: String(Date.now()),\n        // Neue ID generieren\n        date: new Date() // Optional: aktuelles Datum setzen\n      };\n      await axios.post(`${BASE_URL}add-expense`, newExpense);\n      getExpenses();\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Abrufen der Ausgaben\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-expenses`);\n      setExpenses(response.data);\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Hinzufügen einer Ausgabe\n  const addExpense = async expense => {\n    try {\n      await axios.post(`${BASE_URL}add-expense`, expense);\n      getExpenses();\n    } catch (err) {\n      var _err$response7, _err$response7$data;\n      setError(((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Löschen einer Ausgabe\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-expense/${id}`);\n      getExpenses();\n    } catch (err) {\n      var _err$response8, _err$response8$data;\n      setError(((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Gesamtausgaben berechnen\n  const totalExpenses = () => {\n    return expenses.reduce((acc, expense) => acc + expense.amount, 0);\n  };\n\n  // Gesamtkontostand berechnen\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  // Transaktionshistorie abrufen\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 4);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      repeatIncome,\n      repeatExpense,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","getIncomes","response","get","data","err","_err$response","_err$response$data","message","addIncome","income","post","_err$response2","_err$response2$data","deleteIncome","id","delete","_err$response3","_err$response3$data","totalIncome","reduce","acc","amount","repeatIncome","incomeToRepeat","find","_id","newIncome","String","Date","now","date","_err$response4","_err$response4$data","repeatExpense","expenseToRepeat","newExpense","getExpenses","_err$response5","_err$response5$data","_err$response6","_err$response6$data","addExpense","expense","_err$response7","_err$response7$data","deleteExpense","_err$response8","_err$response8$data","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","createdAt","slice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["D:/Programmieren_YT/Expense_Tracker/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [incomes, setIncomes] = useState([]);\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Abrufen der Einkommen\r\n    const getIncomes = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-incomes`);\r\n            setIncomes(response.data);\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Hinzufügen eines Einkommens\r\n    const addIncome = async (income) => {\r\n        try {\r\n            await axios.post(`${BASE_URL}add-income`, income);\r\n            getIncomes();\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Löschen eines Einkommens\r\n    const deleteIncome = async (id) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}delete-income/${id}`);\r\n            getIncomes();\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Gesamteinkommen berechnen\r\n    const totalIncome = () => {\r\n        return incomes.reduce((acc, income) => acc + income.amount, 0);\r\n    };\r\n\r\n    // Wiederholen eines Einkommens\r\n    const repeatIncome = async (id) => {\r\n        try {\r\n            const incomeToRepeat = incomes.find(income => income._id === id);\r\n            if (!incomeToRepeat) {\r\n                setError(\"Einkommen nicht gefunden\");\r\n                return;\r\n            }\r\n\r\n            const newIncome = {\r\n                ...incomeToRepeat,\r\n                _id: String(Date.now()), // Neue ID generieren\r\n                date: new Date() // Optional: aktuelles Datum setzen\r\n            };\r\n\r\n            await axios.post(`${BASE_URL}add-income`, newIncome);\r\n            getIncomes();\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n        // Wiederholen eines Ausgaben\r\n        const repeatExpense = async (id) => {\r\n            try {\r\n                const expenseToRepeat = expenses.find(income => income._id === id);\r\n                if (!expenseToRepeat) {\r\n                    setError(\"Einkommen nicht gefunden\");\r\n                    return;\r\n                }\r\n    \r\n                const newExpense = {\r\n                    ...expenseToRepeat,\r\n                    _id: String(Date.now()), // Neue ID generieren\r\n                    date: new Date() // Optional: aktuelles Datum setzen\r\n                };\r\n    \r\n                await axios.post(`${BASE_URL}add-expense`, newExpense);\r\n                getExpenses();\r\n            } catch (err) {\r\n                setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n            }\r\n        };\r\n\r\n\r\n\r\n    // Abrufen der Ausgaben\r\n    const getExpenses = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-expenses`);\r\n            setExpenses(response.data);\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Hinzufügen einer Ausgabe\r\n    const addExpense = async (expense) => {\r\n        try {\r\n            await axios.post(`${BASE_URL}add-expense`, expense);\r\n            getExpenses();\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Löschen einer Ausgabe\r\n    const deleteExpense = async (id) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}delete-expense/${id}`);\r\n            getExpenses();\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Gesamtausgaben berechnen\r\n    const totalExpenses = () => {\r\n        return expenses.reduce((acc, expense) => acc + expense.amount, 0);\r\n    };\r\n\r\n    // Gesamtkontostand berechnen\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses();\r\n    };\r\n\r\n    // Transaktionshistorie abrufen\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses];\r\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n        return history.slice(0, 4);\r\n    };\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            repeatIncome,\r\n            repeatExpense,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useGlobalContext = () => useContext(GlobalContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAG,+BAA+B;AAEhD,MAAMC,aAAa,gBAAGP,KAAK,CAACQ,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGd,QAAQ,aAAa,CAAC;MAC1DO,UAAU,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACVP,QAAQ,CAAC,EAAAM,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,4BAA4B,CAAC;IACzE;EACJ,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAOC,MAAM,IAAK;IAChC,IAAI;MACA,MAAMxB,KAAK,CAACyB,IAAI,CAAC,GAAGtB,QAAQ,YAAY,EAAEqB,MAAM,CAAC;MACjDT,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOI,GAAG,EAAE;MAAA,IAAAO,cAAA,EAAAC,mBAAA;MACVb,QAAQ,CAAC,EAAAY,cAAA,GAAAP,GAAG,CAACH,QAAQ,cAAAU,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcR,IAAI,cAAAS,mBAAA,uBAAlBA,mBAAA,CAAoBL,OAAO,KAAI,4BAA4B,CAAC;IACzE;EACJ,CAAC;;EAED;EACA,MAAMM,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACA,MAAM7B,KAAK,CAAC8B,MAAM,CAAC,GAAG3B,QAAQ,iBAAiB0B,EAAE,EAAE,CAAC;MACpDd,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOI,GAAG,EAAE;MAAA,IAAAY,cAAA,EAAAC,mBAAA;MACVlB,QAAQ,CAAC,EAAAiB,cAAA,GAAAZ,GAAG,CAACH,QAAQ,cAAAe,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcb,IAAI,cAAAc,mBAAA,uBAAlBA,mBAAA,CAAoBV,OAAO,KAAI,4BAA4B,CAAC;IACzE;EACJ,CAAC;;EAED;EACA,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB,OAAOxB,OAAO,CAACyB,MAAM,CAAC,CAACC,GAAG,EAAEX,MAAM,KAAKW,GAAG,GAAGX,MAAM,CAACY,MAAM,EAAE,CAAC,CAAC;EAClE,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOR,EAAE,IAAK;IAC/B,IAAI;MACA,MAAMS,cAAc,GAAG7B,OAAO,CAAC8B,IAAI,CAACf,MAAM,IAAIA,MAAM,CAACgB,GAAG,KAAKX,EAAE,CAAC;MAChE,IAAI,CAACS,cAAc,EAAE;QACjBxB,QAAQ,CAAC,0BAA0B,CAAC;QACpC;MACJ;MAEA,MAAM2B,SAAS,GAAG;QACd,GAAGH,cAAc;QACjBE,GAAG,EAAEE,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;QAAE;QACzBC,IAAI,EAAE,IAAIF,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC;MAED,MAAM3C,KAAK,CAACyB,IAAI,CAAC,GAAGtB,QAAQ,YAAY,EAAEsC,SAAS,CAAC;MACpD1B,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOI,GAAG,EAAE;MAAA,IAAA2B,cAAA,EAAAC,mBAAA;MACVjC,QAAQ,CAAC,EAAAgC,cAAA,GAAA3B,GAAG,CAACH,QAAQ,cAAA8B,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc5B,IAAI,cAAA6B,mBAAA,uBAAlBA,mBAAA,CAAoBzB,OAAO,KAAI,4BAA4B,CAAC;IACzE;EACJ,CAAC;;EAEG;EACA,MAAM0B,aAAa,GAAG,MAAOnB,EAAE,IAAK;IAChC,IAAI;MACA,MAAMoB,eAAe,GAAGtC,QAAQ,CAAC4B,IAAI,CAACf,MAAM,IAAIA,MAAM,CAACgB,GAAG,KAAKX,EAAE,CAAC;MAClE,IAAI,CAACoB,eAAe,EAAE;QAClBnC,QAAQ,CAAC,0BAA0B,CAAC;QACpC;MACJ;MAEA,MAAMoC,UAAU,GAAG;QACf,GAAGD,eAAe;QAClBT,GAAG,EAAEE,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;QAAE;QACzBC,IAAI,EAAE,IAAIF,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC;MAED,MAAM3C,KAAK,CAACyB,IAAI,CAAC,GAAGtB,QAAQ,aAAa,EAAE+C,UAAU,CAAC;MACtDC,WAAW,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOhC,GAAG,EAAE;MAAA,IAAAiC,cAAA,EAAAC,mBAAA;MACVvC,QAAQ,CAAC,EAAAsC,cAAA,GAAAjC,GAAG,CAACH,QAAQ,cAAAoC,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAclC,IAAI,cAAAmC,mBAAA,uBAAlBA,mBAAA,CAAoB/B,OAAO,KAAI,4BAA4B,CAAC;IACzE;EACJ,CAAC;;EAIL;EACA,MAAM6B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMnC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGd,QAAQ,cAAc,CAAC;MAC3DS,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAmC,cAAA,EAAAC,mBAAA;MACVzC,QAAQ,CAAC,EAAAwC,cAAA,GAAAnC,GAAG,CAACH,QAAQ,cAAAsC,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcpC,IAAI,cAAAqC,mBAAA,uBAAlBA,mBAAA,CAAoBjC,OAAO,KAAI,4BAA4B,CAAC;IACzE;EACJ,CAAC;;EAED;EACA,MAAMkC,UAAU,GAAG,MAAOC,OAAO,IAAK;IAClC,IAAI;MACA,MAAMzD,KAAK,CAACyB,IAAI,CAAC,GAAGtB,QAAQ,aAAa,EAAEsD,OAAO,CAAC;MACnDN,WAAW,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOhC,GAAG,EAAE;MAAA,IAAAuC,cAAA,EAAAC,mBAAA;MACV7C,QAAQ,CAAC,EAAA4C,cAAA,GAAAvC,GAAG,CAACH,QAAQ,cAAA0C,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcxC,IAAI,cAAAyC,mBAAA,uBAAlBA,mBAAA,CAAoBrC,OAAO,KAAI,4BAA4B,CAAC;IACzE;EACJ,CAAC;;EAED;EACA,MAAMsC,aAAa,GAAG,MAAO/B,EAAE,IAAK;IAChC,IAAI;MACA,MAAM7B,KAAK,CAAC8B,MAAM,CAAC,GAAG3B,QAAQ,kBAAkB0B,EAAE,EAAE,CAAC;MACrDsB,WAAW,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOhC,GAAG,EAAE;MAAA,IAAA0C,cAAA,EAAAC,mBAAA;MACVhD,QAAQ,CAAC,EAAA+C,cAAA,GAAA1C,GAAG,CAACH,QAAQ,cAAA6C,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc3C,IAAI,cAAA4C,mBAAA,uBAAlBA,mBAAA,CAAoBxC,OAAO,KAAI,4BAA4B,CAAC;IACzE;EACJ,CAAC;;EAED;EACA,MAAMyC,aAAa,GAAGA,CAAA,KAAM;IACxB,OAAOpD,QAAQ,CAACuB,MAAM,CAAC,CAACC,GAAG,EAAEsB,OAAO,KAAKtB,GAAG,GAAGsB,OAAO,CAACrB,MAAM,EAAE,CAAC,CAAC;EACrE,CAAC;;EAED;EACA,MAAM4B,YAAY,GAAGA,CAAA,KAAM;IACvB,OAAO/B,WAAW,CAAC,CAAC,GAAG8B,aAAa,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,OAAO,GAAG,CAAC,GAAGzD,OAAO,EAAE,GAAGE,QAAQ,CAAC;IACzCuD,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI1B,IAAI,CAAC0B,CAAC,CAACC,SAAS,CAAC,GAAG,IAAI3B,IAAI,CAACyB,CAAC,CAACE,SAAS,CAAC,CAAC;IACrE,OAAOJ,OAAO,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9B,CAAC;EAED,oBACIrE,OAAA,CAACE,aAAa,CAACoE,QAAQ;IAACC,KAAK,EAAE;MAC3BlD,SAAS;MACTR,UAAU;MACVN,OAAO;MACPmB,YAAY;MACZjB,QAAQ;MACRsB,WAAW;MACXuB,UAAU;MACVL,WAAW;MACXS,aAAa;MACbG,aAAa;MACbC,YAAY;MACZC,kBAAkB;MAClBpD,KAAK;MACLwB,YAAY;MACZW,aAAa;MACblC;IACJ,CAAE;IAAAP,QAAA,EACGA;EAAQ;IAAAmE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAACrE,EAAA,CA3JWF,cAAc;AAAAwE,EAAA,GAAdxE,cAAc;AA6J3B,OAAO,MAAMyE,gBAAgB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlF,UAAU,CAACM,aAAa,CAAC;AAAA;AAAC4E,GAAA,CAAnDD,gBAAgB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}