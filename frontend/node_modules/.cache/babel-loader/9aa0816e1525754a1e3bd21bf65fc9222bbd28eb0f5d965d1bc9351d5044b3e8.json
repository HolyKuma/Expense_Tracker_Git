{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programmieren_YT\\\\Expense_Tracker - Kopie\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Einkommen hinzufügen\n  const addIncome = async income => {\n    try {\n      await axios.post(`${BASE_URL}add-income`, income);\n      await getIncomes(); // Daten nach dem Hinzufügen aktualisieren\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Einkommen abrufen\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`);\n      setIncomes(response.data);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Ausgabe hinzufügen\n  const addExpense = async income => {\n    try {\n      await axios.post(`${BASE_URL}add-expense`, income);\n      await getExpenses(); // Daten nach dem Hinzufügen aktualisieren\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Ausgaben abrufen\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-expenses`);\n      setExpenses(response.data);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // useEffect Hook zum Abrufen von Incomes und Expenses beim ersten Rendern\n  useEffect(() => {\n    getIncomes();\n    getExpenses();\n  }, []); // Leeres Array als Abhängigkeit, um es nur einmal beim Mounting auszuführen\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      expenses,\n      addExpense,\n      getExpenses,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"C5hJzJWvNypkpmTtlsf8SGGGlns=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useEffect","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","post","getIncomes","err","_err$response","_err$response$data","response","data","message","get","_err$response2","_err$response2$data","addExpense","getExpenses","_err$response3","_err$response3$data","_err$response4","_err$response4$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["D:/Programmieren_YT/Expense_Tracker - Kopie/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n\r\n    const [incomes, setIncomes] = useState([]);\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Einkommen hinzufügen\r\n    const addIncome = async (income) => {\r\n        try {\r\n            await axios.post(`${BASE_URL}add-income`, income);\r\n            await getIncomes(); // Daten nach dem Hinzufügen aktualisieren\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Einkommen abrufen\r\n    const getIncomes = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-incomes`);\r\n            setIncomes(response.data);\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Ausgabe hinzufügen\r\n    const addExpense = async (income) => {\r\n        try {\r\n            await axios.post(`${BASE_URL}add-expense`, income);\r\n            await getExpenses(); // Daten nach dem Hinzufügen aktualisieren\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Ausgaben abrufen\r\n    const getExpenses = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-expenses`);\r\n            setExpenses(response.data);\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // useEffect Hook zum Abrufen von Incomes und Expenses beim ersten Rendern\r\n    useEffect(() => {\r\n        getIncomes();\r\n        getExpenses();\r\n    }, []); // Leeres Array als Abhängigkeit, um es nur einmal beim Mounting auszuführen\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            expenses,\r\n            addExpense,\r\n            getExpenses,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}