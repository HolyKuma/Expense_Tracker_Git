{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programmieren_YT\\\\Expense_Tracker - Kopie\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Einkommen hinzufügen\n  const addIncome = async income => {\n    try {\n      await axios.post(`${BASE_URL}add-income`, income);\n      await getIncomes(); // Daten nach dem Hinzufügen aktualisieren\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Einkommen abrufen\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`);\n      setIncomes(response.data);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Einkommen löschen\n  const deleteIncome = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-income/${id}`);\n      await getIncomes(); // Daten nach dem Löschen aktualisieren\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Gesamteinkommen berechnen\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome += income.amount;\n    });\n    return totalIncome;\n  };\n\n  // Ausgabe hinzufügen\n  const addExpense = async income => {\n    try {\n      await axios.post(`${BASE_URL}add-expense`, income);\n      await getExpenses(); // Daten nach dem Hinzufügen aktualisieren\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Ausgaben abrufen\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-expenses`);\n      setExpenses(response.data);\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Ausgabe löschen\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-expense/${id}`);\n      await getExpenses(); // Daten nach dem Löschen aktualisieren\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || \"Ein Fehler ist aufgetreten\");\n    }\n  };\n\n  // Gesamtausgaben berechnen\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach(income => {\n      totalIncome += income.amount;\n    });\n    return totalIncome;\n  };\n\n  // Gesamtbilanz berechnen\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  // Transaktionsverlauf abrufen\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","post","getIncomes","err","_err$response","_err$response$data","response","data","message","get","_err$response2","_err$response2$data","deleteIncome","id","delete","_err$response3","_err$response3$data","totalIncome","forEach","amount","addExpense","getExpenses","_err$response4","_err$response4$data","_err$response5","_err$response5$data","deleteExpense","_err$response6","_err$response6$data","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["D:/Programmieren_YT/Expense_Tracker - Kopie/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n\r\n    const [incomes, setIncomes] = useState([]);\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Einkommen hinzufügen\r\n    const addIncome = async (income) => {\r\n        try {\r\n            await axios.post(`${BASE_URL}add-income`, income);\r\n            await getIncomes(); // Daten nach dem Hinzufügen aktualisieren\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Einkommen abrufen\r\n    const getIncomes = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-incomes`);\r\n            setIncomes(response.data);\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Einkommen löschen\r\n    const deleteIncome = async (id) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}delete-income/${id}`);\r\n            await getIncomes(); // Daten nach dem Löschen aktualisieren\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Gesamteinkommen berechnen\r\n    const totalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((income) => {\r\n            totalIncome += income.amount;\r\n        });\r\n        return totalIncome;\r\n    };\r\n\r\n    // Ausgabe hinzufügen\r\n    const addExpense = async (income) => {\r\n        try {\r\n            await axios.post(`${BASE_URL}add-expense`, income);\r\n            await getExpenses(); // Daten nach dem Hinzufügen aktualisieren\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Ausgaben abrufen\r\n    const getExpenses = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-expenses`);\r\n            setExpenses(response.data);\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Ausgabe löschen\r\n    const deleteExpense = async (id) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}delete-expense/${id}`);\r\n            await getExpenses(); // Daten nach dem Löschen aktualisieren\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Ein Fehler ist aufgetreten\");\r\n        }\r\n    };\r\n\r\n    // Gesamtausgaben berechnen\r\n    const totalExpenses = () => {\r\n        let totalIncome = 0;\r\n        expenses.forEach((income) => {\r\n            totalIncome += income.amount;\r\n        });\r\n        return totalIncome;\r\n    };\r\n\r\n    // Gesamtbilanz berechnen\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses();\r\n    };\r\n\r\n    // Transaktionsverlauf abrufen\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses];\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt);\r\n        });\r\n        return history.slice(0, 3);\r\n    };\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}